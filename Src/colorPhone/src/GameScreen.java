import javax.microedition.lcdui.*;
import java.util.*;

public class GameScreen 
	extends Canvas
	implements Runnable
{
	Random generator;
	int loopbaclk=1;
	int LoopFlag=1;
	int colour;
	int index=0;
	int waitForNextBG=0;
	int csDelayCount=0;
	int[] colourArray1 =new int[]{
			0x42844c	,
			0x430c59	,
			0x4358af	,
			0x43b078	,
			0x4425f0	,
			0x443f00	,
			0x4488be	,
			0x450191	,
			0x453d29	,
			0x457700	,
			0x461e0f	,
			0x46574b	,
			0x46807e	,
			0x47008a	,
			0x473b37	,
			0x476556	,
			0x47a06c	,
			0x482064	,
			0x484ed2	,
			0x48bbb2	,
			0x493945	,
			0x495ae9	,
			0x4986c7	,
			0x49efa1	,
			0x4a3b30	,
			0x4a744a	,
			0x4ad161	,
			0x4b2b21	,
			0x4b670b	,
			0x4c0aa8	,
			0x4c4650	,
			0x4c84d0	,
			0x4cd5fd	,
			0x4d0f37	,
			0x4d635e	,
			0x4dce91	,
			0x4e2b00	,
			0x4e662f	,
			0x4ea063	,
			0x4f1410	,
			0x4f526a	,
			0x4fa300	,
			0x5000d8	,
			0x503a00	,
			0x508327	,
			0x50de94	,
			0x51572d	,
			0x519c97	,
			0x52040d	,
			0x524641	,
			0x526e82	,
			0x52f317	,
			0x53344c	,
			0x537430	,
			0x5395cd	,
			0x53df77	,
			0x542b70	,
			0x5450c0	,
			0x54a133	,
			0x550800	,
			0x55471c	,
			0x5586bf	,
			0x5600a8	,
			0x5649d2	,
			0x5677b1	,
			0x56c108	,
			0x57241b	,
			0x574f6a	,
			0x579146	,
			0x57cf6b	,
			0x583a7d	,
			0x586d7a	,
			0x58ecbe	,
			0x59304c	,
			0x5978fe	,
			0x59a114	,
			0x5a2028	,
			0x5a5426	,
			0x5a8227	,
			0x5afeaf	,
			0x5b3e5e	,
			0x5b541d	,
			0x5b9e63	,
			0x5c0956	,
			0x5c4400	,
			0x5c72c2	,
			0x5ce140	,
			0x5d3975	,
			0x5d98a9	,
			0x5e0172	,
			0x5e422c	,
			0x5e704a	,
			0x5ea9a4	,
			0x5f044f	,
			0x5f4e5b	,
			0x5f8a8b	,
			0x5fdf63	,
			0x604042	,
			0x606e5a	,
			0x60de81	,
			0x611ede	,
			0x61549f	,
			0x61c4e5	,
			0x623185	,
			0x626040	,
			0x628cf1	,
			0x62d6e0	,
			0x632362	,
			0x635a76	,
			0x639e51	,
			0x640db6	,
			0x645036	,
			0x648f3d	,
			0x64df58	,
			0x652a38	,
			0x65568e	,
			0x659b7d	,
			0x65e5f9	,
			0x663d42	,
			0x666982	,
			0x668e33	,
			0x66fcb9	,
			0x673f1d	,
			0x6760b5	,
			0x67af26	,
			0x682154	,
			0x684ab8	,
			0x688e28	,
			0x69015b	,
			0x694b54	,
			0x696fc2	,
			0x69ca9a	,
			0x6a3c2d	,
			0x6a6a6a	,
			0x6a8edf	,
			0x6b0015	,
			0x6b39a2	,
			0x6b687a	,
			0x6ba1d2	,
			0x6bf04e	,
			0x6c268d	,
			0x6c7597	,
			0x6cbb72	,
			0x6d0080	,
			0x6d528e	,
			0x6dad3f	,
			0x6e2424	,
			0x6e595f	,
			0x6e8971	,
			0x6f2416	,
			0x6f557e	,
			0x6f8b58	,
			0x6fd9b1	,
			0x7034e4	,
			0x7067dd	,
			0x709fdb	,
			0x7119ff	,
			0x714a36	,
			0x717c3c	,
			0x71bb69	,
			0x7200a5	,
			0x7246b8	,
			0x72758f	,
			0x72a69c	,
			0x72ff72	,
			0x73638b	,
			0x73ee65	,
			0x743b8a	,
			0x746b32	,
			0x74960a	,
			0x74dd59	,
			0x75237d	,
			0x755a28	,
			0x75ac00	,
			0x761095	,
			0x764900	,
			0x7669cb	,
			0x7693a9	,
			0x76ff67	,
			0x775a00	,
			0x779598	,
			0x77ee5a	,
			0x783417	,
			0x786b00	,
			0x78a4a5	,
			0x78e3f9	,
			0x79329a	,
			0x7978da	,
			0x79cb62	,
			0x7a2be4	,
			0x7a5367	,
			0x7a7dbf	,
			0x7af9cd	,
			0x7b40b8	,
			0x7b747e	,
			0x7bd2ea	,
			0x7c2b4a	,
			0x7c571f	,
			0x7ca1c0	,
			0x7d00cd	,
			0x7d5713	,
			0x7d8847	,
			0x7dcc00	,
			0x7e0085	,
			0x7e5541	,
			0x7e838b	,
			0x7eb697	,
			0x7eff4f	,
			0x7f3972	,
			0x7f6273	,
			0x7f9601	,
			0x800000	,
			0x8083fb	,
			0x80faaf	,
			0x814046	,
			0x8170f5	,
			0x819ae4	,
			0x82146e	,
			0x825529	,
			0x829919	,
			0x82cb41	,
			0x832443	,
			0x835420	,
			0x837ea5	,
			0x83a493	,
			0x841ee4	,
			0x84644b	,
			0x84947e	,
			0x84d6a8	,
			0x851c51	,
			0x856611	,
			0x85a75d	,
			0x8600f6	,
			0x865239	,
			0x868647	,
			0x86d5bb	,
			0x874c67	,
			0x8772e3	,
			0x87b585	,
			0x8800b3	,
			0x886c98	,
			0x88a570	,
			0x8908db	,
			0x8939b0	,
			0x896333	,
			0x89aece	,
			0x8a193c	,
			0x8a61cc	,
			0x8a9552	,
			0x8ad964	,
			0x8b3d9f	,
			0x8b79b6	,
			0x8bb57c	,
			0x8bf6cd	,
			0x8c4b58	,
			0x8c724e	,
			0x8ca567	,
			0x8ce5bf	,
			0x8d1721	,
			0x8d6043	,
			0x8db80f	,
			0x8e1619	,
			0x8e5b73	,
			0x8e917e	,
			0x8f003c	,
			0x8f4e21	,
			0x8f8161	,
			0x8fbce5	,
			0x90257a	,
			0x906408	,
			0x90b1a0	,
			0x90fc42	,
			0x9137ea	,
			0x917b9c	,
			0x91bed3	,
			0x9200a2	,
			0x9255e7	,
			0x9286cd	,
			0x92e5b5	,
			0x932473	,
			0x935b63	,
			0x93951b	,
			0x93d68c	,
			0x9425fc	,
			0x946aec	,
			0x948d98	,
			0x95236b	,
			0x9578a5	,
			0x95a441	,
			0x95ea4f	,
			0x963f77	,
			0x965fba	,
			0x96d764	,
			0x9745be	,
			0x979164	,
			0x97c1a4	,
			0x982e1a	,
			0x986dda	,
			0x989bb7	,
			0x98c642	,
			0x991773	,
			0x995bc3	,
			0x9988b2	,
			0x99d0c4	,
			0x9a348f	,
			0x9a6e20	,
			0x9ae934	,
			0x9b2731	,
			0x9b6a67	,
			0x9b9e8b	,
			0x9bc626	,
			0x9c44b5	,
			0x9c7a83	,
			0x9ca24b	,
			0x9d1f4e	,
			0x9d5083	,
			0x9d904a	,
			0x9dcaf4	,
			0x9e2600	,
			0x9e695f	,
			0x9ed56f	,
			0x9f3fbe	,
			0x9f7af2	,
			0x9fb428	,
			0x9ffa32	,
			0xa05364	,
			0xa0778c	,
			0xa0b7ef	,
			0xa10e55	,
			0xa168da	,
			0xa1902b	,
			0xa1e499	,
			0xa238c7	,
			0xa256c3	,
			0xa298b7	,
			0xa2d19f	,
			0xa33760	,
			0xa37d0b	,
			0xa3bdb7	,
			0xa42297	,
			0xa45da1	,
			0xa49e70	,
			0xa4e671	,
			0xa5524c	,
			0xa57fcd	,
			0xa5cbd7	,
			0xa65500	,
			0xa6880a	,
			0xa6c07f	,
			0xa700b0	,
			0xa75145	,
			0xa77b36	,
			0xa7c409	,
			0xa80024	,
			0xa83a0d	,
			0xa8785a	,
			0xa8f0e1	,
			0xa95135	,
			0xa98d2c	,
			0xa9c076	,
			0xaa2f60	,
			0xaa6eae	,
			0xaa9efd	,
			0xaaec03	,
			0xab2e59	,
			0xab5c90	,
			0xab94b7	,
			0xabd803	,
			0xac4d4d	,
			0xac8a4b	,
			0xace299	,
			0xad4964	,
			0xad8701	,
			0xadd183	,
			0xae2668	,
			0xae6423	,
			0xaea9a1	,
			0xaef800	,
			0xaf4c35	,
			0xaf7ebc	,
			0xafa5c5	,
			0xaffff9	,
			0xb05bed	,
			0xb0ad61	,
			0xb0d079	,
			0xb13f84	,
			0xb1830a	,
			0xb1bf59	,
			0xb2484d	,
			0xb28576	,
			0xb2baae	,
			0xb32352	,
			0xb35a78	,
			0xb394a6	,
			0xb3c207	,
			0xb4234a	,
			0xb48387	,
			0xb4ae02	,
			0xb5008f	,
			0xb55688	,
			0xb57437	,
			0xb5cabb	,
			0xb6319c	,
			0xb6742d	,
			0xb6c8ce	,
			0xb74255	,
			0xb77abc	,
			0xb7a6a1	,
			0xb7e17c	,
			0xb82ff0	,
			0xb86e73	,
			0xb89fd8	,
			0xb8e344	,
			0xb95290	,
			0xb97f90	,
			0xb9bb80	,
			0xba1cb6	,
			0xba6e6b	,
			0xbabd5a	,
			0xbaf288	,
			0xbb5958	,
			0xbb844b	,
			0xbbcc96	,
			0xbc402e	,
			0xbc7f88	,
			0xbce167	,
			0xbd082e	,
			0xbd5848	,
			0xbd928b	,
			0xbdbd44	,
			0xbe0526	,
			0xbe5840	,
			0xbebb6d	,
			0xbf0000	,
			0xbf6a73	,
			0xbf96fd	,
			0xbfeccd	,
			0xc034d5	,
			0xc085e5	,
			0xc0e051	,
			0xc13bc4	,
			0xc16a6b	,
			0xc18ac1	,
			0xc1ba64	,
			0xc20036	,
			0xc28f94	,
			0xc2b880	,
			0xc300f9	,
			0xc36395	,
			0xc3a758	,
			0xc40027	,
			0xc452db	,
			0xc48143	,
			0xc4e603	,
			0xc5324e	,
			0xc56c15	,
			0xc5a574	,
			0xc5e024	,
			0xc66674	,
			0xc6ade6	,
			0xc6ead7	,
			0xc74a78	,
			0xc79169	,
			0xc7d8c0	,
			0xc8312f	,
			0xc86942	,
			0xc8a0a1	,
			0xc900f0	,
			0xc94e50	,
			0xc9931f	,
			0xc9d4e6	,
			0xca3609	,
			0xca86c1	,
			0xcabb07	,
			0xcb274e	,
			0xcb71b3	,
			0xcbaaf0	,
			0xcbdc7c	,
			0xcc4480	,
			0xcc89a6	,
			0xccf120	,
			0xcd55b7	,
			0xcd9daa	,
			0xcdef69	,
			0xce4c09	,
			0xce8e69	,
			0xcecf03	,
			0xcf4851	,
			0xcf889d	,
			0xcfc2c5	,
			0xcfef5e	,
			0xd034ff	,
			0xd06cbc	,
			0xd0b56e	,
			0xd1006d	,
			0xd185af	,
			0xd1c4a9	,
			0xd23499	,
			0xd27388	,
			0xd2a300	,
			0xd300cd	,
			0xd360e9	,
			0xd3b55b	,
			0xd3ef46	,
			0xd4461d	,
			0xd47401	,
			0xd4b09c	,
			0xd4fdb4	,
			0xd5765e	,
			0xd5baf5	,
			0xd60060	,
			0xd66bab	,
			0xd69c90	,
			0xd7004f	,
			0xd75f31	,
			0xd796bd	,
			0xd7e9b1	,
			0xd84041	,
			0xd890e1	,
			0xd8e2f5	,
			0xd95e00	,
			0xd99e63	,
			0xd9cef0	,
			0xda0031	,
			0xda7167	,
			0xdab419	,
			0xdb0021	,
			0xdb46b8	,
			0xdb8772	,
			0xdbd95e	,
			0xdc566c	,
			0xdc8deb	,
			0xdcd5a4	,
			0xdd374a	,
			0xdd9d46	,
			0xdde2eb	,
			0xde5931	,
			0xde9d3b	,
			0xdecee7	,
			0xdf2381	,
			0xdf591b	,
			0xdf9b6c	,
			0xe00000	,
			0xe08658	,
			0xe0c53a	,
			0xe13500	,
			0xe17caf	,
			0xe1a7c1	,
			0xe1fc8c	,
			0xe279c1	,
			0xe2c267	,
			0xe308f4	,
			0xe3659a	,
			0xe3987e	,
			0xe3cddd	,
			0xe46c56	,
			0xe4a7b8	,
			0xe4fc82	,
			0xe560ab	,
			0xe5a99d	,
			0xe615e4	,
			0xe65307	,
			0xe691ab	,
			0xe6d653	,
			0xe72900	,
			0xe7976c	,
			0xe7dfeb	,
			0xe84d4c	,
			0xe89487	,
			0xe8bbb3	,
			0xe8f101	,
			0xe94d44	,
			0xe9ae2e	,
			0xea31b8	,
			0xea74c1	,
			0xeac22c	,
			0xeb183b	,
			0xeb6be6	,
			0xeb9afa	,
			0xebccca	,
			0xec465d	,
			0xecb5d9	,
			0xed005a	,
			0xed6270	,
			0xed963c	,
			0xedd35f	,
			0xee3ff3	,
			0xee9090	,
			0xeee0c5	,
			0xef4dcf	,
			0xef9603	,
			0xeffb37	,
			0xf08abd	,
			0xf0b5cf	,
			0xf11fb8	,
			0xf17d47	,
			0xf1bf3c	,
			0xf20034	,
			0xf25ff8	,
			0xf2a58b	,
			0xf2d9ff	,
			0xf31caf	,
			0xf3768d	,
			0xf3bc68	,
			0xf406cd	,
			0xf47c15	,
			0xf4d200	,
			0xf54bbd	,
			0xf59fb8	,
			0xf619a7	,
			0xf65c68	,
			0xf68f6d	,
			0xf6dbe2	,
			0xf76000	,
			0xf7c104	,
			0xf800b8	,
			0xf85b57	,
			0xf898dd	,
			0xf8e448	,
			0xf981cf	,
			0xf9d03b	,
			0xfa3155	,
			0xfa79f5	,
			0xfacb9b	,
			0xfb06b8	,
			0xfb7800	,
			0xfbb968	,
			0xfc3045	,
			0xfca182	,
			0xfcf497	,
			0xfd5900	,
			0xfd8e32	,
			0xfddacf	,
			0xfe2f2c	,
			0xfe8b64	,
			0xfee161	,
			0xff40b4	,
			0xffa070	,
			0xffd8e2	

	


	};
	  
	//Default constructor for our GameScreen class.
	public GameScreen()
	{
		//set up the games random number generator
		generator = new Random( System.currentTimeMillis() );
		//create a new Thread on this Runnable and start it immediately
		new Thread( this ).start();		
	}
	
	/*
	 * run() method defined in the Runnable interface, called by the 
	 * Virtual machine when a Thread is started.
	 */
	public void run()
	{
		int loopDelay=0;
		while( true )
		{
			//set wanted loop delay to 15th of a second
			//int loopDelay = 1000 / 15;
			if(LoopFlag==1 )
			{
			loopDelay = 25000;
			//	loopDelay = 1000;
			LoopFlag=0;
			}
			else
			{
				loopDelay = 5000;
				//loopDelay = 500;
			}
					
			
			//get the time at the start of the loop
			long loopStartTime = System.currentTimeMillis();
			//call our tick() fucntion which will be our games heartbeat
			tick();
			//get time at end of loop
			long loopEndTime  = System.currentTimeMillis();
			//caluclate the difference in time from start til end of loop
			int loopTime = (int)(loopEndTime - loopStartTime); 
			//if the difference is less than what we want
			if( loopTime <= loopDelay )
			{
				try
				{
					//then sleep for the time needed to fullfill our wanted rate
					Thread.sleep( loopDelay - loopTime );
				}
				catch( Exception e )
				{
				}
				
			}
		}
	}
	
	/*
	 * Our games main loop, called at a fixed rate by our game Thread
	 */
	public void tick()
	{
		//get a random number within the RRGGBB colour range
		//colour = generator.nextInt() & 0xFFFFFF; 
		
		if(loopbaclk==0)
		{
			if(index<colourArray1.length)
			{
			colour=colourArray1[index];
			index++;
			loopbaclk=1;
			}
			else
			{
				index=0;
				LoopFlag=1;
				loopbaclk=1;
			}
		}
		else
		{
			 colour= 0x000021;
			//colour= 0xffffff;
		
			loopbaclk=0;
		}
		
		//schedule a repaint of the Canvas 
		repaint();
		//forces any pending repaints to be serviced, and blocks until 
		//paint() has returned
		serviceRepaints();
	}
	
	
	/* 
	 * called when the Canvas is to be painted
	 */
	protected void paint( Graphics g )
	{
		//set the current color of the Graphics contect to the specified RRGGBB colour
		g.setColor( colour );
		//draw a filled rectangle at x,y coordinates 0, 0 with a width
		// and height equal to that of the Canvas itself
		g.fillRect( 0, 0, this.getWidth(), this.getHeight() );		
	}
	
	/* 
	* called when a key is pressed and this Canvas is the
	* current Displayable 
	*/
	protected void keyPressed( int keyCode )
	{
		//get the game action from the passed keyCode
		int gameAction = getGameAction( keyCode );
		switch( gameAction )
		{
			case LEFT:
			//set current colour to red
			colour = 0xFF0000; 
			break;
			
			case RIGHT:
			//set current colour to green
			colour = 0x00FF00;
			break;
			
			case UP:
			//set current colour to black
			colour = 0x000000;
			break;
			
			case DOWN:
			//set current colour to white
			colour = 0xFFFFFF;
			break;
			
			case FIRE:
			//set current colour to blue
			colour = 0x0000FF;
			break;
		}
	}

	/* 
	* called when a key is released  and this Canvas is the
	* current Displayable 
	*/
	protected void keyReleased( int keyCode )
	{
	}
}
